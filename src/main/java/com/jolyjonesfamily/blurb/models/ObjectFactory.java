//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.25 at 09:43:27 PM CDT 
//


package com.jolyjonesfamily.blurb.models;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.jolyjonesfamily.blurb.models package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Pattern_QNAME = new QName("", "pattern");
    private final static QName _Then_QNAME = new QName("", "then");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.jolyjonesfamily.blurb.models
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Embed }
     * 
     */
    public Embed createEmbed() {
        return new Embed();
    }

    /**
     * Create an instance of {@link Else }
     * 
     */
    public Else createElse() {
        return new Else();
    }

    /**
     * Create an instance of {@link Category }
     * 
     */
    public Category createCategory() {
        return new Category();
    }

    /**
     * Create an instance of {@link Cat }
     * 
     */
    public Cat createCat() {
        return new Cat();
    }

    /**
     * Create an instance of {@link com.jolyjonesfamily.blurb.models.Param }
     * 
     */
    public com.jolyjonesfamily.blurb.models.Param createParam() {
        return new com.jolyjonesfamily.blurb.models.Param();
    }

    /**
     * Create an instance of {@link Entry }
     * 
     */
    public Entry createEntry() {
        return new Entry();
    }

    /**
     * Create an instance of {@link Content }
     * 
     */
    public Content createContent() {
        return new Content();
    }

    /**
     * Create an instance of {@link Embed.Param }
     * 
     */
    public Embed.Param createEmbedParam() {
        return new Embed.Param();
    }

    /**
     * Create an instance of {@link Echo }
     * 
     */
    public Echo createEcho() {
        return new Echo();
    }

    /**
     * Create an instance of {@link If }
     * 
     */
    public If createIf() {
        return new If();
    }

    /**
     * Create an instance of {@link Categories }
     * 
     */
    public Categories createCategories() {
        return new Categories();
    }

    /**
     * Create an instance of {@link Blurb }
     * 
     */
    public Blurb createBlurb() {
        return new Blurb();
    }

    /**
     * Create an instance of {@link Namespaces }
     * 
     */
    public Namespaces createNamespaces() {
        return new Namespaces();
    }

    /**
     * Create an instance of {@link Namespace }
     * 
     */
    public Namespace createNamespace() {
        return new Namespace();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Cat }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "pattern")
    public JAXBElement<Cat> createPattern(Cat value) {
        return new JAXBElement<Cat>(_Pattern_QNAME, Cat.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Content }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "then")
    public JAXBElement<Content> createThen(Content value) {
        return new JAXBElement<Content>(_Then_QNAME, Content.class, null, value);
    }

}
